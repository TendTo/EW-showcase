{
  "HOME": {
    "TITLE": "Energy Web DApp showcase",
    "SECTION_1_TITLE": "Cos'è Energy Web?",
    "SECTION_1_TEXT": "Energy Web è un progetto con lo scopo di promuovere una rete elettrica con un basso utilizzo di combustibili fossili e con un focus sui piccoli produttori attraverso la tecnologia blockchain.\nAd ogni dispositivo è possibile assegnare un identificativo univoco per consentirgli di essere verificato e quindi di svolgere un ruolo attivo nel mercato dell'ernergia.",
    "SECTION_2_TITLE": "Energy Web Dos",
    "SECTION_2_TEXT": "Il cuore del progetto di Energy Web è EW-DOS, un’infrastruttura opensource, pubblica e digitale.\nL’intero sistema è costituito da tre macro componenti, ognuno con uno scopo specifico:",
    "SECTION_2_ITEM_1": "Trust - Energy Web Chain (EWC)",
    "SECTION_2_ITEM_2": "Utility - Servizi e astrazioni sopra la blockchain",
    "SECTION_2_ITEM_3": "Toolkit - Frameworks e strumenti per la costruzione di applicazioni",
    "SECTION_2_IMG": "Schema di EW-Dos",
    "SECTION_3_TITLE": "Livello Trust",
    "SECTION_3_TEXT": "Il ruolo principale della EWC è quello di assicurare che ci sia consenso sui dati e che tutte le applicazioni e gli smart contracts si comportino in maniera deterministica.\nSi basa sulla Ethereum Virtual Machine (EVM), quindi consente la creazione di smart contract e rispetta tutti gli Ethereum Request for Comment (ERC).\nÈ presente anche una test-net, chiamata Volta, usata per testare i progetti è le applicazioni prima di lanciare sulla main-net.\nL’algoritmo di consenso è Proof of Authority (POA), basato sul protocollo AuRA. A costo di una minore decentralizzazione, assicura performance molto elevata.\nIl token usato sulla blockchain si chiama Energy Web Token (EWT).",
    "SECTION_4_TITLE": "Livello Utility",
    "SECTION_4_TEXT": "L’utility layer è composto da un insieme di servizi basati sulla EWC che hanno lo scopo di rendere quanto più accessibile e invitante possibile l’intera infrastruttura per gli sviluppatori.\nTutti i servizi vengono pagati in EWT. \nVengono individuate 3 ampie categorie di servizi: Esperienza dell’utente finale, Interoperabilità Multipiattaforma, Performance delle applicazioni.\n\nAlcuni esempi sono:",
    "SECTION_5_TITLE": "Livello Toolkits",
    "SECTION_5_TEXT": "Insieme di framework e servizi pensati per realizzare applicazioni decentralizzate su EW-DOS.\n\nGli esempi principali sono due:\nEW-Origin - Serve a sviluppare pplicazioni che supportino il tracciamento, la trasmissione e il conferimento di energy Attribute Certificate (EAC) secondo gli standard industriali.\nEW-Flex - Software open source per la gestione dei Distributed Energy Resource (DER) e le operazioni che li coinvolgono. Assicura un facile collegamento alla rete, sottoponendo le offerte provenienti dai piccoli produttori ad un operatore autorizzato che funge da intermediario tra l'utente e la rete.",
    "SECTION_4_ITEM_1": "EWNS - Seguendo lo stesso principio di un DNS, associa domini ad indirizzi sulla blockchain",
    "SECTION_4_ITEM_2": "Oracles - Nodi che è possibile consultare con il protocollo Chainlink per ricevere dati di eventi esterni alla blockchain",
    "SECTION_4_ITEM_3": "Identity Directory - Smart contract che contiene tutti le Decentralized IDentifiers (DID)",
    "SECTION_4_ITEM_4": "Messaging - Un sistema di messaggistica che sfrutta le DID per assicurare validità ed autenticità dei messaggi"
  },
  "LOGIN": {
    "TITLE": "EW showcase login",
    "TEXT": "Effettua il login con l'estenzione browser MetaMask",
    "BUTTON_METAMASK": "Login con Metamask",
    "ERROR_UNSUPPORTED_CHAIN": "La rete {{chain}} non è supportata.\nConnettiti alla rete di test volta",
    "NO_METAMASK": "Non hai MetaMask?",
    "WHAT_IS_EW": "Cos'è Energy Web?",
    "CONNECT": "Connettiti",
    "CONNECT_TO_VOLTA": "Non connesso a volta?"
  },
  "ERROR": {
    "GENERIC": "Si è verificato un errore.\nControlla la console per saperne di più",
    "NO_PROVIDER": "Non è stato trovato nessun Ethereum provider.\nScarica MetaMaks",
    "NO_ACCOUNT": "Nessun account connesso.\nConnetti un account",
    "REQUEST_ALREADY_SENT": "Una richiesta è già stata inviata. Controlla l'estensione MetaMask",
    "REQUEST_REJECTED": "La richiesta di connessione è stata rifiutata",
    "EMPTY_FIELD": "Il campo non può essere lasciato vuoto",
    "ADDRESS_NOT_FOUND": "L'indirizzo specificato non è stato trovato",
    "INVALID_INPUT": "L'input non è valido",
    "REQUEST_UNAUTHORIZED": "La richesta non è autorizzata.\nAssicurarti di avere i ruoli necessari."
  },
  "ENS": {
    "TITLE": "Ethereum Name Service (ENS)",
    "SECTION_1_TEXT": "L'Ethereum Name Service è un sistema di denominazione distribuito, aperto ed estensibile basato sulla blockchain di Ethereum. \nÈ disponibile anche sulle catene di Energy Web.\nAnalogamente a un DNS, gli indirizzi vengono mappati su nomi di dominio leggibili dall'uomo anziché su valori esadecimali.\nL'implementazione disponibile pubblicamente predefinita consente l'utilizzo con: indirizzi, indirizzi inversi, hash di dati, definizioni ABI, chiavi pubbliche, interfacce di smart contracs e così via.",
    "SECTION_1_TITLE": "Cos'è ENS?",
    "SECTION_2_TITLE": "Come funziona?",
    "SECTION_2_TEXT": "Per un utente finale, ovviamente, il tutto è completamente trasparente. È compito dello sviluppatore di DApp integrare le funzionalità dell'ENS.\nEsistono diverse librerie che già supportano questa funzione, anche se potrebbe essere necessaria qualche patch manuale.\nIl procedimento per risolvere un dominio con ENS, comunque, non è particolarmente complicato:",
    "SECTION_2_ITEM_1": "Normalizza ed applica una funzione di hashing sul nome. <a>(Approfondisci)</a>",
    "SECTION_2_ITEM_3": "Usando l'interfaccia del resolver, chiama addr() sull'indirizzo del resolver restituito nel passaggio 2, passando il nome con hash calcolato nel passaggio 1. In alternativa, se non stai cercando un indirizzo, chiama la funzione dell'interfaccia che ti interessa, ad esempio text()",
    "SECTION_2_ITEM_2": "Chiamare resolver() sul registro ENS, passando l'output del passaggio 1. Ciò restituisce l'indirizzo del resolver responsabile del dominio.",
    "SECTION_2_TEXT_PT_2": "Per saperne di più su come funziona ENS tecnicamente, visita la <a>wiki ufficiale</a>",
    "SECTION_3_TITLE": "ENS in azione",
    "SECTION_3_TEXT": "Usa la barra di ricerca di seguito per cosntatare quanto può essere comodo ENS.\nProva prima a cercare qualcosa prima con l'indirizzo esadecimale e poi usa il dominio.\nEs. 0xef131ed1460626e97F34243DAc544B42eb52a472 | tend.ewc",
    "SECTION_3_LABEL_1": "Dominio o indirizzo",
    "SEARCH": "Cerca"
  },
  "EW_ACCOUNT": {
    "BALANCE": "Saldo:",
    "TRANSACTION": "Ultime 5 transazioni"
  },
  "FOOTER": {
    "LEGAL": "Tutti i nomi, loghi, immagini e brand appartengono ai rispettivi proprietari."
  },
  "NAV": {
    "ADDRESS_COPIED": "Indirizzo copiato"
  },
  "DID": {
    "DID_VERIFIED": "DID verificato con successo",
    "SECTION_1_TITLE": "Cos'è un DID?",
    "SECTION_2_TITLE": "Qual è lo scopo delle DID?",
    "TITLE": "Identity and Access Management (IAM)",
    "DID_LOADING": "Loading...\nAspetta per confermare la transazione con MetaMask",
    "DID_ERROR": "Si è verificato un errore con il login.\nSe hai rifiutato la richiesta, puoi provare nuovamente.\nSe questa è la priva volta che esegui l'operazione, hai bisogno di un po' di Volta token per creare la DID.\nPuoi ottenere dei Volta token dal <a>Volta Faucet</a>.",
    "LOGIN": "Connettiti con MetaMask",
    "LOGOUT": "Log out",
    "ASSET_DID": "DID asset",
    "DID_ADDRESS": "Indirizzo",
    "DID_BIRTHDATE": "Data di nascita",
    "DID_NAME": "Nome",
    "NO_CLAIMS": "Non sono stati trovati claims",
    "USER_DID": "DID utente",
    "SECTION_1_TEXT": "I DID sono identificatori univoci usati per realizzare identità digitali verificabili e decentralizzate. Sono la base per l'implementazione delle Self Sovrain Identity (SSI).\nIl soggetto identificato può essere qualsiasi cosa: una persona, un'organizzazione o un bene fisico, per fare qualche esempio.\nUn DID si comporta come un URL e punta ad un DID document, archiviato su un archivio pubblico permanente, come una blockchain.\nIl DID document contiene tutte le informazioni o claims relativi al soggetto identificato dal DID e fornisce un insieme di meccaniscmi che consentono a chi controlla il DID di provarne il possesso.",
    "SECTION_1_IMG": "Semplice esempio di un Decentralized IDentifier (DID) con i suoi componenti",
    "SECTION_2_TEXT": "Il soggetto identificato ha bisogno di un’identità per essere in grado di dimostrare di possedere determinati tratti o caratteristiche a un verificatore.\nIl verificatore ha un certo numero di emittenti di fiducia ed è disposto ad accettarne i claims, cioè le affermazioni.\nIl soggetto può chiedere a uno di questi emittenti di aggiungere una dichiarazione firmata sul proprio documento DID,\nInoltre, sia l'emittente che il verificatore devono essere in grado di verificare che il soggetto sia effettivamente il proprietario dell'identità. Ciò si ottiene tramite DIDAuth.\nQuesto processo può assumere molte forme, come specificato nel documento DID, ma un modo comune è attraverso un challenge inviata dall'emittente o dal verificatore al soggetto, del quale conoscono la chiave pubblica grazie al DID document, che a sua volta risponderà firmando con la propria chiave privata, dimostrando la propria identità.\n\nProviamo un'analogia con il mondo reale.\nVuoi comprare alcool al bar. Per farlo, devi essere in grado di dimostrare al barista di avere almeno 18 anni. Il barista in questo caso è il verificatore.\nPuoi dimostrare la tua richiesta mostrando la tua carta d'identità.\nQuesta viene rilasciato dal governo, che funge da emittente di fiducia per il barman, il quale verificherà che tu sia effettivamente la persona raffigurata nella foto e si convincerà che sei maggiorennte.",
    "SECTION_1_IMG_2": "Panoramica dell'architettura dei DID e le relazioni fra le componenti fondamentali",
    "SECTION_2_IMG": "Possibile flusso che mostra come un'interazione di autenticazione potrebbe utilizzare DID per l'autenticazione autonoma"
  }
}

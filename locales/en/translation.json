{
  "HOME": {
    "TITLE": "Energy Web DApp showcase",
    "SECTION_1_TITLE": "What is Energy Web?",
    "SECTION_1_TEXT": "Energy Web is a project that aims to promote a low-carbon ow-carbon, customer-centric electricity system through the blockchain technology.\nEvery energy asset can be assigned an unique identifies to allow it to be verified and to participate actively in any energy market.",
    "SECTION_2_TITLE": "Energy Web Dos",
    "SECTION_2_TEXT": "The heart of the Energy Web project is EW-DOS, an opensource, public, digital infrostracture.\nThe whole system is buit on top of three macro compoenets, each with its purpouse:",
    "SECTION_2_ITEM_1": "Trust - Energy Web Chain (EWC)",
    "SECTION_2_ITEM_2": "Utility - Services and abstraction over the blockchain",
    "SECTION_2_ITEM_3": "Toolkit - Frameworks and tools for building applications",
    "SECTION_2_IMG": "EW-Dos schema",
    "SECTION_3_TITLE": "Trust layer",
    "SECTION_3_TEXT": "The main role of the EWC is to ensure that there is consensus on the data and that all applications and smart contracts behave in a deterministic manner.\nIt is based on the Ethereum Virtual Machine (EVM), and as such allows the creation of smart contracts and respects all the Ethereum Request for Comment (ERC).\nThere is also a test-net, called Volta, used to test projects and applications before running on the main-net.\nThe consensus algorithm is Proof of Authority (POA), based on the AuRA protocol. At the cost of less decentralization, it ensures very high performance.\nThe token used on the blockchain is called Energy Web Token (EWT).",
    "SECTION_4_TEXT": "The utility layer consists of a set of EWC-based services that aim to make the entire infrastructure as accessible and inviting as possible for developers.\nAll services are paid for in EWT.\nThree broad categories of services are identified: End-user experience, Multi-platform interoperability, Application performance.\n\nSome examples are:",
    "SECTION_4_TITLE": "Utility layer",
    "SECTION_4_ITEM_1": "EWNS - Similar to DNS, it associates human readable domains to addresses on the blockchain",
    "SECTION_4_ITEM_2": "Oracles - Nodes that can be consulted with the Chainlink protocol to receive data of events external to the blockchain",
    "SECTION_4_ITEM_3": "Identity Directory - Smart contract that contains all the Decentralized IDentifiers (DID)",
    "SECTION_4_ITEM_4": "Messaging - A messaging system that uses DIDs to ensure the validity and authenticity of messages",
    "SECTION_5_TITLE": "Toolkits layer",
    "SECTION_5_TEXT": "Set of frameworks and services designed to create decentralized applications on EW-DOS.\n\nThere are two main examples:\nEW-Origin - Used to develop applications that support the tracking, transmission and awarding of energy Attribute Certificates (EAC) according to industry standards.\nEW-Flex - Open source software for the management of Distributed Energy Resource (DER) and the operations that involve them. Ensures an easy connection to the network, submitting the offers coming from small producers to an authorized operator that acts as intermetiator between the user and the grid."
  },
  "LOGIN": {
    "TITLE": "EW showcase login",
    "TEXT": "Login using the MetaMask browser extension",
    "BUTTON_METAMASK": "Login with Metamask",
    "ERROR_UNSUPPORTED_CHAIN": "{{chain}} net is not supported.\nConnect to the volta testnet",
    "NO_METAMASK": "Don't have MetaMask?",
    "WHAT_IS_EW": "What is Energy Web?",
    "CONNECT_TO_VOLTA": "Not connected to volta?",
    "CONNECT": "Connect"
  },
  "ERROR": {
    "GENERIC": "An error has occurred.\nCheck the console logs to know more",
    "NO_PROVIDER": "No ethereum provider found.\nPlease download Metamask",
    "NO_ACCOUNT": "No account connected.\nPlease connect an account",
    "REQUEST_ALREADY_SENT": "A request has already been sent.\nCheck your MetaMask extension",
    "REQUEST_REJECTED": "The connection request has been rejected",
    "ADDRESS_NOT_FOUND": "The provided address could not be found",
    "EMPTY_FIELD": "The field cannot be empty",
    "INVALID_INPUT": "The input is not valid",
    "REQUEST_UNAUTHORIZED": "Unauthorized login response.\nPlease ensure that you have the necessary role claim."
  },
  "ENS": {
    "TITLE": "Ethereum Name Service (ENS)",
    "SECTION_1_TITLE": "What is ENS?",
    "SECTION_1_TEXT": "The Ethereum Name Service is a distributed, open, and extensible naming system based on the Ethereum blockchain. It is available on the Energy Web's chains as well.\nSimilarly to a DNS, addresses are mapped to human readeable domain names instead of hexadecimal values.\nThe default publicly available implementation allows mapping for: address, reverse addresses, content hashes, ABIdefinitions, public keys, smart contrats interfaces and so on.",
    "SECTION_2_TITLE": "How does it work?",
    "SECTION_2_TEXT": "For an end user, of course, everything is completely transparent. It is up to the DApp developer to integrate the ENS functionality.\nThere are several libraries that already support this feature, although some manual patching may be required.\nIn any case, the procedure for solving a domain with ENS is not very complicated:",
    "SECTION_2_ITEM_1": "Normalise and hash the name. <a>(Learn more)</a>",
    "SECTION_2_ITEM_2": "Call resolver() on the ENS registry, passing in the output of step 1. This returns the address of the resolver responsible for the name.",
    "SECTION_2_ITEM_3": "Using the resolver interface, call addr() on the resolver address returned in step 2, passing in the hashed name calculated in step 1.  Alternatively if you are not looking up an address, call the relevant interface function to read the value of interest, e.g. text()",
    "SECTION_2_TEXT_PT_2": "To know more about how ENS works under the hood, visit the <a>official wiki</a>",
    "SECTION_3_TITLE": "ENS in action",
    "SECTION_3_TEXT": "Use the name resolver below to see how convenient ENS can be.\nTry searching something with the hexadecimal address first and then use its domain name.\nEg. 0xef131ed1460626e97F34243DAc544B42eb52a472 | tend.ewc",
    "SECTION_3_LABEL_1": "Name or address",
    "SEARCH": "Search"
  },
  "EW_ACCOUNT": {
    "TRANSACTION": "Last 5 transactions",
    "BALANCE": "Balance:"
  },
  "FOOTER": {
    "LEGAL": "All names, logos, images, and brands are property of their respective owners."
  },
  "NAV": {
    "ADDRESS_COPIED": "Address copied to clipboard"
  },
  "DID": {
    "TITLE": "Identity and Access Management (IAM)",
    "SECTION_1_TITLE": "What is IAM?",
    "SECTION_1_TEXT": "IAM is a framework of policies and protocols that ensures that only authorized entities are able to access the requested resources.",
    "SECTION_2_TITLE": "How does it work?",
    "SECTION_2_TEXT": "In a decentralized system, as blockchains, a common approach to implement IAM is to employ Decentralized IDentifiers (DIDs).",
    "DID_VERIFIED": "DID verified successfully",
    "DID_LOADING": "Loading...\nWait to sign the transaction with MetaMask",
    "DID_ERROR": "Error occurred with login.\nIf you rejected the signing requests, please try again and accept.\nIf this is your first time logging in, your account needs a small amount of Volta token to create a DID Document.\nA Volta token can be obtained from the <a>Volta Faucet</a>.",
    "LOGIN": "Connect with MetaMask",
    "LOGOUT": "Log out"
  }
}
